// <auto-generated />
using System;
using DisciplineSwitcher.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DisciplineSwitcher.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230610124103_AddClaimsToRole")]
    partial class AddClaimsToRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DisciplineGroup", b =>
                {
                    b.Property<Guid>("DisciplinesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uuid");

                    b.HasKey("DisciplinesId", "GroupsId");

                    b.HasIndex("GroupsId");

                    b.ToTable("DisciplineGroup");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Discipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("GroupTeacher", b =>
                {
                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeachersId")
                        .HasColumnType("uuid");

                    b.HasKey("GroupsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("GroupTeacher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136"),
                            Name = "Student"
                        },
                        new
                        {
                            Id = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f"),
                            Name = "Teacher"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 49,
                            ClaimType = "student:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 50,
                            ClaimType = "student:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 51,
                            ClaimType = "student:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 52,
                            ClaimType = "student:update",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 53,
                            ClaimType = "teacher:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 54,
                            ClaimType = "teacher:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 55,
                            ClaimType = "teacher:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 56,
                            ClaimType = "teacher:update",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 57,
                            ClaimType = "discipline:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 58,
                            ClaimType = "discipline:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 59,
                            ClaimType = "discipline:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 60,
                            ClaimType = "discipline:update",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 61,
                            ClaimType = "faculty:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 62,
                            ClaimType = "faculty:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 63,
                            ClaimType = "faculty:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 64,
                            ClaimType = "faculty:update",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 65,
                            ClaimType = "semester:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 66,
                            ClaimType = "semester:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 67,
                            ClaimType = "semester:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 68,
                            ClaimType = "semester:update",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 69,
                            ClaimType = "group:get",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 70,
                            ClaimType = "group:create",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 71,
                            ClaimType = "group:delete",
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        },
                        new
                        {
                            Id = 72,
                            ClaimType = "student:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 73,
                            ClaimType = "student:update",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 74,
                            ClaimType = "teacher:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 75,
                            ClaimType = "teacher:create",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 76,
                            ClaimType = "teacher:update",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 77,
                            ClaimType = "teacher:delete",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 78,
                            ClaimType = "discipline:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 79,
                            ClaimType = "discipline:create",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 80,
                            ClaimType = "discipline:update",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 81,
                            ClaimType = "discipline:delete",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 82,
                            ClaimType = "faculty:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 83,
                            ClaimType = "semester:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 84,
                            ClaimType = "group:get",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 85,
                            ClaimType = "group:create",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 86,
                            ClaimType = "group:update",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 87,
                            ClaimType = "group:delete",
                            RoleId = new Guid("104adc6e-eb7e-40ee-832c-64b2198b0e6f")
                        },
                        new
                        {
                            Id = 88,
                            ClaimType = "student:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 89,
                            ClaimType = "student:create",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 90,
                            ClaimType = "student:delete",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 91,
                            ClaimType = "student:update",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 92,
                            ClaimType = "teacher:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 93,
                            ClaimType = "discipline:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 94,
                            ClaimType = "faculty:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 95,
                            ClaimType = "semester:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        },
                        new
                        {
                            Id = 96,
                            ClaimType = "group:get",
                            RoleId = new Guid("7a7231fb-fe42-40df-bf8b-1adcb564a136")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("672979c9-d851-4bb7-83b6-a75e906dbefa"),
                            RoleId = new Guid("d522e6ae-a0d5-4753-8bf1-feb30e3b535e")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Student", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasIndex("FacultyId");

                    b.HasIndex("GroupId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Teacher", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid");

                    b.HasIndex("FacultyId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("672979c9-d851-4bb7-83b6-a75e906dbefa"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da697c07-41a7-41c7-99c8-9b502179b221",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEL9xYeh+iW3EbWSCDnqQeYMLEpRw/CAvTbhBM030oVfDDC62h+04D40zbfxfLeoEIQ==",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("DisciplineGroup", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplineSwitcher.Domain.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Discipline", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Semester", "Semester")
                        .WithMany("Disciplines")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Group", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Faculty", "Faculty")
                        .WithMany("Groups")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("GroupTeacher", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisciplineSwitcher.Domain.Entities.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Student", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Faculty", null)
                        .WithMany("Students")
                        .HasForeignKey("FacultyId");

                    b.HasOne("DisciplineSwitcher.Domain.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithOne()
                        .HasForeignKey("DisciplineSwitcher.Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Teacher", b =>
                {
                    b.HasOne("DisciplineSwitcher.Domain.Entities.Faculty", null)
                        .WithMany("Teachers")
                        .HasForeignKey("FacultyId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>", null)
                        .WithOne()
                        .HasForeignKey("DisciplineSwitcher.Domain.Entities.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Faculty", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DisciplineSwitcher.Domain.Entities.Semester", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
